{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/matheuschimendes/restaurant-app/app/pages/api/pedido/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\ntype ItemPedido = {\n  nome: string;\n  preco: number;\n};\n\ntype Pedido = {\n  id: number;\n  mesa: string;\n  itens: ItemPedido[];\n  total: string;\n  status: string;\n};\n\n// Banco de dados simulado em memória\nconst pedidos: Pedido[] = [];\n\nexport async function POST(request: NextRequest) {\n  const { mesa, itens, total }: { mesa: string; itens: ItemPedido[]; total: string } = await request.json();\n\n  // Validação de dados\n  if (!mesa || !itens || !total) {\n    return NextResponse.json({ message: \"Dados do pedido incompletos!\" }, { status: 400 });\n  }\n\n  // Criando novo pedido\n  const novoPedido: Pedido = {\n    id: pedidos.length + 1,\n    mesa,\n    itens,\n    total,\n    status: \"pendente\", // Status inicial do pedido\n  };\n\n  pedidos.push(novoPedido); // Salvando o pedido em memória\n\n  return NextResponse.json({ message: \"Pedido recebido com sucesso!\", pedido: novoPedido }, { status: 201 });\n}\n\nexport async function GET() {\n  // Retorna todos os pedidos para exibir no dashboard\n  return NextResponse.json(pedidos);\n}\n"],"names":[],"mappings":";;;;AAAA;;AAeA,qCAAqC;AACrC,MAAM,UAAoB,EAAE;AAErB,eAAe,KAAK,OAAoB;IAC7C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAyD,MAAM,QAAQ,IAAI;IAEvG,qBAAqB;IACrB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO;QAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA+B,GAAG;YAAE,QAAQ;QAAI;IACtF;IAEA,sBAAsB;IACtB,MAAM,aAAqB;QACzB,IAAI,QAAQ,MAAM,GAAG;QACrB;QACA;QACA;QACA,QAAQ;IACV;IAEA,QAAQ,IAAI,CAAC,aAAa,+BAA+B;IAEzD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAgC,QAAQ;IAAW,GAAG;QAAE,QAAQ;IAAI;AAC1G;AAEO,eAAe;IACpB,oDAAoD;IACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}