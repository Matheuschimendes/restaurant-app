{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/matheuschimendes/restaurant-app/app/pages/produto/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\n\ntype Produto = {\n  id: number;\n  nomeProduto: string;\n  preco: number;\n  tipo: \"espeto\" | \"sobremesa\" | \"acompanhamento\";\n  descricao?: string;\n  imagemUrl?: string;\n};\n\nconst ProdutosPage = () => {\n  const [produtos, setProdutos] = useState<Produto[]>([]);\n  const [nomeProduto, setNomeProduto] = useState(\"\");\n  const [precoProduto, setPrecoProduto] = useState(0);\n  const [tipoProduto, setTipoProduto] = useState<\n    \"espeto\" | \"sobremesa\" | \"acompanhamento\"\n  >(\"espeto\");\n  const [descricaoProduto, setDescricaoProduto] = useState(\"\");\n  const [imagemProduto, setImagemProduto] = useState<string | null>(null);\n\n  const [produtoEditando, setProdutoEditando] = useState<Produto | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // Controla a exibição do modal\n\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const response = await fetch(\"/pages/api/produto/[id]\");\n        if (!response.ok) throw new Error(\"Erro ao carregar produtos\");\n        const data: Produto[] = await response.json();\n        setProdutos(data);\n      } catch (error) {\n        console.error(\"Erro ao buscar produtos:\", error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n\n  const handleCadastroProduto = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!nomeProduto || precoProduto <= 0 || isNaN(precoProduto)) {\n      alert(\"Por favor, preencha todos os campos corretamente.\");\n      return;\n    }\n\n    const novoProduto = {\n      nomeProduto,\n      preco: precoProduto,\n      tipo: tipoProduto,\n      descricao: descricaoProduto,\n      imagemUrl: imagemProduto, // URL da imagem\n    };\n\n    try {\n      const response = produtoEditando\n        ? await fetch(`/pages/api/produto/${produtoEditando.id}`, {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ ...novoProduto, id: produtoEditando.id }),\n          })\n        : await fetch(\"/pages/api/produto/[id]\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(novoProduto),\n          });\n\n      if (response.ok) {\n        alert(\n          produtoEditando\n            ? \"Produto atualizado com sucesso!\"\n            : \"Produto cadastrado com sucesso!\"\n        );\n        const produtoCadastrado = await response.json();\n        setProdutos((prevProdutos) =>\n          produtoEditando\n            ? prevProdutos.map((prod) =>\n                prod.id === produtoEditando.id ? produtoCadastrado : prod\n              )\n            : [...prevProdutos, produtoCadastrado]\n        );\n        resetForm();\n        setIsModalOpen(false); // Fecha o modal após o cadastro\n      } else {\n        alert(\"Erro ao cadastrar/atualizar produto.\");\n      }\n    } catch (error) {\n      console.error(\"Erro ao cadastrar/atualizar produto:\", error);\n      alert(\"Erro ao cadastrar/atualizar produto.\");\n    }\n  };\n\n  const handleDeleteProduto = async (id: number) => {\n    try {\n      const response = await fetch(`/pages/api/produto/${id}`, {\n        method: \"DELETE\",\n      });\n\n      if (response.ok) {\n        alert(\"Produto excluído com sucesso!\");\n        setProdutos(produtos.filter((produto) => produto.id !== id));\n      } else {\n        alert(\"Erro ao excluir produto.\");\n      }\n    } catch (error) {\n      console.error(\"Erro ao excluir produto:\", error);\n      alert(\"Erro ao excluir produto.\");\n    }\n  };\n\n  const handleEditProduto = (produto: Produto) => {\n    setProdutoEditando(produto);\n    setNomeProduto(produto.nomeProduto);\n    setPrecoProduto(produto.preco);\n    setTipoProduto(produto.tipo);\n    setDescricaoProduto(produto.descricao || \"\");\n    setImagemProduto(produto.imagemUrl || null);\n    setIsModalOpen(true); // Abre o modal ao editar um produto\n  };\n\n  const resetForm = () => {\n    setProdutoEditando(null);\n    setNomeProduto(\"\");\n    setPrecoProduto(0);\n    setTipoProduto(\"espeto\");\n    setDescricaoProduto(\"\");\n    setImagemProduto(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-r from-gray-100 to-gray-200 p-6\">\n      <div className=\"max-w-6xl mx-auto bg-white rounded-lg shadow-lg p-6\">\n        <h1 className=\"text-2xl font-semibold mb-4\">Cadastro de Produtos</h1>\n\n        {/* Botão para abrir o modal */}\n        <button\n          onClick={() => setIsModalOpen(true)}\n          className=\"w-full bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600\"\n        >\n          Cadastrar Novo Produto\n        </button>\n      </div>\n\n      {/* Modal para cadastro/edição */}\n      {isModalOpen && (\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex justify-center items-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg w-96\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              {produtoEditando ? \"Editar Produto\" : \"Cadastrar Produto\"}\n            </h2>\n            <form onSubmit={handleCadastroProduto}>\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Nome do Produto\n                </label>\n                <input\n                  type=\"text\"\n                  value={nomeProduto}\n                  onChange={(e) => setNomeProduto(e.target.value)}\n                  className=\"w-full p-2 mt-1 border border-gray-300 rounded-md\"\n                  required\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Preço\n                </label>\n                <input\n                  type=\"number\"\n                  value={precoProduto}\n                  onChange={(e) => setPrecoProduto(parseFloat(e.target.value))}\n                  className=\"w-full p-2 mt-1 border border-gray-300 rounded-md\"\n                  required\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Tipo\n                </label>\n                <select\n                  value={tipoProduto}\n                  onChange={(e) =>\n                    setTipoProduto(\n                      e.target.value as\n                        | \"espeto\"\n                        | \"sobremesa\"\n                        | \"acompanhamento\"\n                    )\n                  }\n                  className=\"w-full p-2 mt-1 border border-gray-300 rounded-md\"\n                  required\n                >\n                  <option value=\"espeto\">Espeto</option>\n                  <option value=\"sobremesa\">Sobremesa</option>\n                  <option value=\"acompanhamento\">Acompanhamento</option>\n                </select>\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Descrição\n                </label>\n                <textarea\n                  value={descricaoProduto}\n                  onChange={(e) => setDescricaoProduto(e.target.value)}\n                  className=\"w-full p-2 mt-1 border border-gray-300 rounded-md\"\n                  rows={4}\n                />\n              </div>\n\n           \n\n              <div className=\"mt-4\">\n                <button\n                  type=\"submit\"\n                  className=\"w-full bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600\"\n                >\n                  {produtoEditando ? \"Atualizar Produto\" : \"Cadastrar Produto\"}\n                </button>\n              </div>\n            </form>\n            <button\n              onClick={() => setIsModalOpen(false)} // Fecha o modal\n              className=\"mt-4 w-full bg-red-500 text-white p-2 rounded-md hover:bg-red-600\"\n            >\n              Fechar\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Exibindo a lista de produtos */}\n\n      <div className=\"max-w-6xl mx-auto mt-8\">\n        <h2 className=\"text-xl font-semibold mb-4\">Lista de Produtos</h2>\n        <table className=\"min-w-full bg-white shadow-md rounded-lg\">\n          <thead>\n            <tr className=\"border-b\">\n              <th className=\"py-3 px-6 text-left text-sm font-semibold text-gray-700\">\n                Imagem\n              </th>\n              <th className=\"py-3 px-6 text-left text-sm font-semibold text-gray-700\">\n                Nome do Produto\n              </th>\n              <th className=\"py-3 px-6 text-left text-sm font-semibold text-gray-700\">\n                Preço\n              </th>\n              <th className=\"py-3 px-6 text-left text-sm font-semibold text-gray-700\">\n                Tipo\n              </th>\n              <th className=\"py-3 px-6 text-left text-sm font-semibold text-gray-700\">\n                Descrição\n              </th>\n              <th className=\"py-3 px-6 text-left text-sm font-semibold text-gray-700\">\n                Ações\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {produtos.map((produto) => (\n              <tr key={produto.id} className=\"border-b hover:bg-gray-50\">\n                <td className=\"py-3 px-6\">\n                  {produto.imagemUrl && (\n                    <Image\n                      src={produto.imagemUrl}\n                      alt={produto.nomeProduto}\n                      width={50}\n                      height={50}\n                      className=\"object-cover rounded-md\"\n                    />\n                  )}\n                </td>\n                <td className=\"py-3 px-6\">{produto.nomeProduto}</td>\n                <td className=\"py-3 px-6\">{produto.preco.toFixed(2)} BRL</td>\n                <td className=\"py-3 px-6\">{produto.tipo}</td>\n                <td className=\"py-3 px-6\">{produto.descricao}</td>\n                <td className=\"py-3 px-6 flex space-x-2\">\n                  <button\n                    onClick={() => handleEditProduto(produto)}\n                    className=\"bg-blue-500 text-white px-3 py-1 rounded-md hover:bg-blue-600\"\n                  >\n                    Editar\n                  </button>\n                  <button\n                    onClick={() => handleDeleteProduto(produto.id)}\n                    className=\"bg-red-500 text-white px-3 py-1 rounded-md hover:bg-red-600\"\n                  >\n                    Excluir\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ProdutosPage;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}